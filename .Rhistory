source('http://bioconductor.org/biocLite.R')
biocLite()
install.packages("swirl")
library(swirl)
s
install.packages('data.table')
install.packages('data.table', dep=# Thu Sep 12 14:12:42 2019 ------------------------------)
install.packages('datatable')
install.packages('data.table', dep=# Thu Sep 12 14:13:48 2019 ------------------------------
)
install.packages('data.table')
install.packages('shinythemes')
install.packages('shiny')
install.packages('ggplot2')
install.packages('dplyr')
install.packages('reshape2')
install.packages('RcolorBrewer')
install.packages('RColorBrewer')
install.packages('lubridate')
install.packages('tidyr')
install.packages('shinydashboard')
install.packages('stargazer')
install.packages('rsconnect')
install.packages('data.table')
library(data.table)
library(datatable)
library(data.table)
install.packages("blogdown")
blogdown::install_hugo(version = "0.69.2", force = TRUE)
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
install.packages("jsonlite")
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
install.packages("rjson")
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
install.packages("optparse")
install.packages("httr")
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
json_data
js_tidy
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
setDT(json_data)
js_tidy<-json_data %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
setDT(json_data)
json_data
View(json_data)
View(json_data)
View(json_data)
json_data
#!/usr/bin/env Rscript
#######################################################################################################################################################
#Script Name    :gnomad_freq.R
#Description    :
#Args           :a JSON output from a query from gnomac broser
#Author         :B치rbara D Bitarello
#Email          :barbarabitarello@gmail.com
#Date created   :22-07-2020
#Requirements   :
#USage          :
########################################################################################################################################################
#load packages
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
stop("At least one argument must be supplied (a name for this run).n", call.=FALSE)
}
#save start time
ptm <- proc.time()
######
js<-args[1]
js<-'results-all.json'
#
cat('Read in JSON file...\n')
#json_data <-fromJSON(paste0('input/', js))
json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
######
tim<-proc.time()[[3]] - ptm[[3]]
cat('Total elapsed time is ', tim, ' seconds\n')
#End
#!/usr/bin/env Rscript
#######################################################################################################################################################
#Script Name    :gnomad_freq.R
#Description    :
#Args           :a JSON output from a query from gnomac broser
#Author         :B치rbara D Bitarello
#Email          :barbarabitarello@gmail.com
#Date created   :22-07-2020
#Requirements   :
#USage          :
########################################################################################################################################################
#load packages
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
stop("At least one argument must be supplied (a name for this run).n", call.=FALSE)
}
#save start time
ptm <- proc.time()
######
js<-args[1]
js<-'results-all.json'
#
cat('Read in JSON file...\n')
#json_data <-fromJSON(paste0('input/', js))
json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
######
tim<-proc.time()[[3]] - ptm[[3]]
cat('Total elapsed time is ', tim, ' seconds\n')
#End
json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
#!/usr/bin/env Rscript
#######################################################################################################################################################
#Script Name    :gnomad_freq.R
#Description    :
#Args           :a JSON output from a query from gnomac broser
#Author         :B치rbara D Bitarello
#Email          :barbarabitarello@gmail.com
#Date created   :22-07-2020
#Requirements   :
#USage          :
########################################################################################################################################################
#load packages
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
stop("At least one argument must be supplied (a name for this run).n", call.=FALSE)
}
#save start time
ptm <- proc.time()
######
js<-args[1]
js<-'results-all.json'
#
cat('Read in JSON file...\n')
#json_data <-fromJSON(paste0('input/', js))
json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
######
tim<-proc.time()[[3]] - ptm[[3]]
cat('Total elapsed time is ', tim, ' seconds\n')
#End
#!/usr/bin/env Rscript
#######################################################################################################################################################
#Script Name    :gnomad_freq.R
#Description    :
#Args           :a JSON output from a query from gnomac broser
#Author         :B치rbara D Bitarello
#Email          :barbarabitarello@gmail.com
#Date created   :22-07-2020
#Requirements   :
#USage          :
########################################################################################################################################################
#load packages
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
#args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
stop("At least one argument must be supplied (a name for this run).n", call.=FALSE)
}
#save start time
ptm <- proc.time()
######
js<-args[1]
js<-'results-all.json'
#
cat('Read in JSON file...\n')
#json_data <-fromJSON(paste0('input/', js))
json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
######
tim<-proc.time()[[3]] - ptm[[3]]
cat('Total elapsed time is ', tim, ' seconds\n')
#End
json_data
fwrite('')
getwd()
setwd('Documents/GitHub/computationalbio/results/)
setwd('Documents/GitHub/computationalbio/')
fwrie(json_data,'test.json')
fwrite(json_data,'test.json')
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
setDT(json_data)
json_data <-fromJSON('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
fwrite(json_data,'test.json')
write_json(json_data,'test.json')
write_json(json_data,'results/test.json')
write_json(json_data,'results/test2.json')
getwd()
js<-'results-7-31-20204-08-25.json'
#
cat('Read in JSON file...\n')
json_data <-fromJSON(paste0(js))
#json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
library(jsonlite)
js<-'results-7-31-20204-08-25.json'
#
cat('Read in JSON file...\n')
json_data <-fromJSON(paste0(js))
#json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
#!/usr/bin/env Rscript
#######################################################################################################################################################
#Script Name    :gnomad_freq.R
#Description    :
#Args           :a JSON output from a query from gnomac broser
#Author         :B치rbara D Bitarello
#Email          :barbarabitarello@gmail.com
#Date created   :22-07-2020
#Requirements   :
#USage          :
########################################################################################################################################################
#load packages
suppressPackageStartupMessages({
library(data.table)
library(dplyr)
library(rjson)
library(optparse)
library(httr)
library(jsonlite)
})
#args = commandArgs(trailingOnly=TRUE)
if (length(args)==0) {
stop("At least one argument must be supplied (a name for this run).n", call.=FALSE)
}
#save start time
ptm <- proc.time()
######
js<-args[1]
js<-'results-7-31-20204-08-25.json'
#
cat('Read in JSON file...\n')
json_data <-fromJSON(paste0(js))
#json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
######
tim<-proc.time()[[3]] - ptm[[3]]
cat('Total elapsed time is ', tim, ' seconds\n')
#End
js<-'results-7-31-20204-08-25.json'
#
cat('Read in JSON file...\n')
json_data <-fromJSON(paste0(js))
#json_data('http://bioinfo.hpc.cam.ac.uk/cellbase/webservices/rest/v4/hsapiens/feature/variation/rs4540055/info?limit%3D-1%26skip%3D-1%26skipCount%3Dfalse%26count%3Dfalse%26Output%2520format%3Djson')
json_data()
json_data
remove(json_data)
json_data <-fromJSON(paste0(js))
json_data
setDT(json_data)
js_tidy<-json_data %>% group_by(id) %>% summarise(REF=refAllele, ALT=altAllele, Freq_Alt=altAlleleFreq, Study=study) %>% rename(ID=id) %>% as.data.table
cat('Done\n')
js_tidy
